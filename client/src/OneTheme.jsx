
const data = ["Questions",
  {
    id: 1,
    question: "–ü–æ—á–µ–º—É JavaScript –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Å–≤–æ—é –∫–æ—Ñ–µ–π–Ω—É—é –∫—Ä—É–∂–∫—É?",
    response: "Undefined",
    ThemeId: 1,
  },
  {
    id: 2,
    question: "–ü–æ—á–µ–º—É JavaScript —É—à–µ–ª –æ—Ç Java?",
    response: "–û–±—ä–µ–∫—Ç—ã",
    ThemeId: 1,
  },
  {
    id: 3,
    question: "–ß—Ç–æ —Å–∫–∞–∑–∞–ª JavaScript, –∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é?",
    response: "ReferenceError",
    ThemeId: 1,
  },
  {
    id: 4,
    question: "–ö–∞–∫ JavaScript –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–∞?",
    response: "Fetch",
    ThemeId: 1,
  },
  {
    id: 5,
    question: "–ü–æ—á–µ–º—É JavaScript –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è?",
    response: "Scope",
    ThemeId: 1,
  },
  {
    id: 6,
    question: "–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç JavaScript, –∫–æ–≥–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞—Å—Ç—Ä–µ–≤–∞–µ—Ç?",
    response: "Await",
    ThemeId: 1,
  },
  {
    id: 7,
    question: "–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç JavaScript, –∫–æ–≥–¥–∞ –≤–∏–¥–∏—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É?",
    response: "Falsy",
    ThemeId: 1,
  },
  {
    id: 8,
    question: "–ü–æ—á–µ–º—É JavaScript –±–æ–∏—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏?",
    response: "Callback",
    ThemeId: 1,
  },
  {
    id: 9,
    question: "–ü–æ—á–µ–º—É JavaScript –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∑–∞–º–∫–Ω—É—Ç–æ–≥–æ –∫—Ä—É–≥–∞?",
    response: "Loop",
    ThemeId: 1,
  },
  {
    id: 10,
    question: "–ü–æ—á–µ–º—É JavaScript –ø–ª–æ—Ö–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ü–∏—Ñ—Ä–∞–º–∏?",
    response: "NaN",
    ThemeId: 1,
  },
  {
    id: 11,
    question: "‚ò¶Ô∏èüëÆüèΩ‚Äç‚ôÄÔ∏è‚õìÔ∏è‚öñÔ∏èüö®üöìüöîüëÆüêï‚Äçü¶∫", 
    response: "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä–∞–ª", 
    ThemeId: 2,
  },
  {
    id: 12,
    question: "üçíüçíüöó", 
    response: "–í–∏—à–Ω—ë–≤–∞—è –¥–µ–≤—è—Ç–∫–∞", 
    ThemeId: 2,
  },
  {
    id: 13,
    question: "üåπüåπüåπüåπüåπüé§üíîüíÉ", 
    response: "–ú–∏–ª–ª–∏–æ–Ω –∞–ª—ã—Ö —Ä–æ–∑", 
    ThemeId: 2,
  },
  {
    id: 14,
    question: "üç∑üç∑üç∑", 
    response: "–†–æ–∑–æ–≤–æ–µ –≤–∏–Ω–æ", 
    ThemeId: 2,
  },
  {
    id: 15,
    question: "üë©‚Äçüë¶üö∂‚Äç‚ôÇÔ∏èüé∂", 
    response: "–ú–∞–º–∞, —è —Ç–∞–Ω—Ü—É—é",
    ThemeId: 2,
  },
  {
    id: 16,
    question: "üíÉ‚úàÔ∏èü™Ç", 
    response: "–ê —è –≤—Å–µ –ª–µ—Ç–∞–ª–∞", 
    ThemeId: 2,
  },
  {
    id: 17,
    question: "ü•É‚õ©üé∂", 
    response: "–†—é–º–∫–∞ –≤–æ–¥–∫–∏ –Ω–∞ —Å—Ç–æ–ª–µ", 
    ThemeId: 2,
  },
  {
    id: 18,
    question: "üíÉü•∂üí¶", 
    response: "–¢–∞–µ—Ç –ª—ë–¥",
    ThemeId: 2,
  },
  {
    id: 19,
    question: "üï∫‚ùå‚õî", 
    response: "–í—ã—Ö–æ–¥–∞ –Ω–µ—Ç", 
    ThemeId: 2,
  },
  {
    id: 20,
    question: "‚ùåüöá", 
    response: "–ü–æ—Å—Ç–æ–π, –ø–∞—Ä–æ–≤–æ–∑", 
    ThemeId: 2,
  },
  {
    id: 21,
    question: "–ö–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ —É–∫—Ä–∞—à–∞–µ—Ç –∫–∞–∂–¥—ã–π –ù–æ–≤—ã–π –≥–æ–¥?", 
    response: "–Å–ª–∫–∞", 
    ThemeId: 3,
  },
  {
    id: 22,
    question: "–ß—Ç–æ –ø–∞–¥–∞–µ—Ç —Å –Ω–µ–±–∞ –∑–∏–º–æ–π?", 
    response: "–°–Ω–µ–≥", 
    ThemeId: 3,
  },
  {
    id: 23,
    question: "–ö–∞–∫–æ–π —Ñ—Ä—É–∫—Ç –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –ù–æ–≤—ã–º –≥–æ–¥–æ–º?", 
    response: "–ú–∞–Ω–¥–∞—Ä–∏–Ω",
    ThemeId: 3,
  },
  {
    id: 24,
    question: "–ö—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –ø–æ–¥–∞—Ä–∫–∏ –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥?", 
    response: "–î–µ–¥–º–æ—Ä–æ–∑",
    ThemeId: 3,
  },
  {
    id: 25,
    question: "–ö–∞–∫–æ–π –Ω–∞–ø–∏—Ç–æ–∫ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –ø–æ–¥ –±–æ–π –∫—É—Ä–∞–Ω—Ç–æ–≤?", 
    response: "–®–∞–º–ø–∞–Ω—Å–∫–æ–µ", 
    ThemeId: 3,
  },
  {
    id: 26,
    question: "–ß—Ç–æ –∑–∞–ø—É—Å–∫–∞—é—Ç –≤ –Ω–µ–±–æ –≤ —á–µ—Å—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫–∞?", 
    response: "–§–µ–π–µ—Ä–≤–µ—Ä–∫", 
    ThemeId: 3,
  },
  {
    id: 27,
    question: "–ö–∞–∫–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ –≤–µ—à–∞—é—Ç –Ω–∞ –≤–µ—Ä—Ö—É—à–∫—É —ë–ª–∫–∏?", 
    response: "–ó–≤–µ–∑–¥–∞", 
    ThemeId: 3,
  },
  {
    id: 28,
    question: "–ß—Ç–æ —á–∞—Å—Ç–æ –ø–æ—é—Ç –Ω–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –≤–µ—á–µ—Ä–∏–Ω–∫–∞—Ö?", 
    response: "–ö–∞—Ä–∞–æ–∫–µ", 
    ThemeId: 3,
  },
  {
    id: 29,
    question: "–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –≤—Ä—É—á–µ–Ω–∏–µ–º –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥?", 
    response: "–ü–æ–¥–∞—Ä–æ–∫",
    ThemeId: 3,
  },
  {
    id: 30,
    question: "–ö–∞–∫–æ–π —Å–∞–ª–∞—Ç —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –≥–æ—Ç–æ–≤—è—Ç –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥?", 
    response: "–û–ª–∏–≤—å–µ", 
    ThemeId: 3,
  }
];


import React, { useState, useEffect } from 'react';
import { useParams } from "react-router-dom";

function OneTheme({ theme }) {
  const [currentQuestion, setCurrentQuestion] = useState(null);
  const [userAnswer, setUserAnswer] = useState('');
  const [result, setResult] = useState(null);
  const [themeId, setThemeId] = useState(1); // default themeId
  const [questionsForTheme, setQuestionsForTheme] = useState([]);
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);

  useEffect(() => {
    const questionsForTheme = data.filter((question) => question.ThemeId === themeId);
    setQuestionsForTheme(questionsForTheme);
    setCurrentQuestion(questionsForTheme[0]);
  }, [themeId]);

  const handleAnswerChange = (event) => {
    setUserAnswer(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    const correctAnswer = currentQuestion.response;
    const userAnswerLower = userAnswer.toLowerCase();
    const correctAnswerLower = correctAnswer.toLowerCase();
    if (userAnswerLower === correctAnswerLower) {
      setResult(true);
    } else {
      setResult(false);
    }
    setTimeout(() => {
      nextQuestion();
    }, 5000);
  };

  const nextQuestion = () => {
    if (currentQuestionIndex < questionsForTheme.length - 1) {
      setCurrentQuestionIndex(currentQuestionIndex + 1);
      setCurrentQuestion(questionsForTheme[currentQuestionIndex + 1]);
      setUserAnswer('');
      setResult(null);
    } else {
      alert('–§–∏–Ω–∏—à!');
    }
  };

  const handleReturnToQuestion1 = () => {
    setCurrentQuestionIndex(0);
    setCurrentQuestion(questionsForTheme[0]);
    setUserAnswer('');
    setResult(null);
  };

  if (!currentQuestion) {
    return <h1>–ñ–¥–∏—Ç–µ</h1>;
  }

  return (
    <div>
      <h1>–¢–µ–º–∞ {themeId}:</h1>
      <h2>{currentQuestion.question}</h2>
      <label>–û—Ç–≤–µ—Ç:</label>
      <input type="text" value={userAnswer} onChange={handleAnswerChange} />
      <button onClick={handleSubmit}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
      {result !== null && (
        <p>
          {result ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.'}
        –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {currentQuestion.response}
        </p>
      )}
      <button onClick={handleReturnToQuestion1}>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–µ—Ä–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É</button>
    </div>
  );
};

export default OneTheme;